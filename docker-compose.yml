version: '3.7'

services:

  tracker:
    build: ./tracker
    command: "./flighttracker.py -m mqtt -H piaware -l ${LAT} -L ${LONG} -a ${ALT} -P skyscan/planes/json -T skyscan/flight/json -M ${MIN_ELEVATION} -c ${CAMERA_LEAD}"
    volumes:
      - ./data:/data
    ports:
      - 5000:5000
    depends_on:
      - mqtt
    restart: unless-stopped

#  pan-tilt-pi:
#    build: ./pan-tilt-pi
#    entrypoint: "./camera.py -m mqtt -t skyscan/flight/json"
#    volumes:
#      - /opt/vc:/opt/vc
#      - ./capture:/app/capture
#    devices:
#      - /dev/i2c-1:/dev/i2c-1       
#      - "/dev/vchiq:/dev/vchiq" 
#    environment: 
#      - LD_LIBRARY_PATH=/opt/vc/lib
#    privileged: true
#    depends_on:
#      - mqtt

  axis-ptz:
    build: ./axis-ptz
    command: "./camera.py -m mqtt -t skyscan/flight/json -u ${AXIS_USERNAME} -p ${AXIS_PASSWORD} -a ${AXIS_IP} -z ${CAMERA_ZOOM} -s ${CAMERA_MOVE_SPEED} -d ${CAMERA_DELAY} --lat ${LAT} --lon ${LONG} --alt ${ALT} --countries-file ${COUNTRIES_FILE}"
    volumes:
      - ./capture:/app/capture
      - ./data:/data
    depends_on:
      - mqtt
    restart: unless-stopped
      
  piaware:
    build: ./piaware
    tty: true
    container_name: piaware
    devices:
      - /dev/bus/usb:/dev/bus/usb
    ports:
      - 8080:80
      - 30003:30003
      - 30005:30005
    environment:
      - TZ=${TZ}
      - LAT=${LAT}
      - LONG=${LONG}
      - FEEDER_ID=${FEEDER_ID}
      - RECEIVER_TYPE=rtlsdr
      - DUMP1090_DEVICE=${RTL_DEV}
    restart: unless-stopped

    
  notebook:
    build: ./notebook-server
    ports:
        - "8888:8888"
    restart: unless-stopped
    depends_on:
      - mqtt


  mqtt:
    build: ./mqtt
    ports:
        - "9001:9001"
        - "1883:1883"
    restart: unless-stopped

  egi:
    build: ./egi
    entrypoint: bash -c "gpsd ${GPS_SERIAL} -F /var/run/gpsd.sock && python3 egi_mqtt.py -m mqtt -l ${LAT} -L ${LONG} -a ${ALT} -r ${ROLL} -p ${PITCH} -y ${YAW}"
    devices:
      - /dev/ttyACM0
    privileged: true
    depends_on:
      - mqtt
    restart: unless-stopped